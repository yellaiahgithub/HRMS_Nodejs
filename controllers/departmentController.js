const DepartmentService = require("../services/departmentService");
const autoNumberingService = require("../services/autoNumberingService");

class Department {
  constructor() {}

  findDepartmentById = async (req, res, next) => {
    try {
      if (!req.params.id) throw new Error("Department id is required.");
      let query = { id: req.params.id };
      // call method to service
      let result = await DepartmentService.findDepartmentById(query, req, res);

      if (!result) {
        return res.status(404).send("Department not found in the database");
      }
      return res.status(200).send(result);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };
  findDepartmentByName = async (req, res, next) => {
    try {
      if (!req.params.name) throw new Error("Department name is required.");
      let query = { name: new RegExp(req.params.name, "i") };
      // call method to service
      let result = await DepartmentService.findDepartment(query, req, res);

      if (!result) {
        return res.status(404).send("Department not found in the database");
      }
      return res.status(200).send(result);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };
  findAll = async (req, res, next) => {
    try {
      console.log("Find Department, Data By: " + JSON.stringify(req.params));
      // call method to service
      let result = await DepartmentService.findAll(req);

      if (!result) {
        return res.status(404).send("Department not found in the database");
      }
      return res.status(200).send(result);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };

  findAllLite = async (req, res, next) => {
    try {
      console.log("Find Department, Data By: " + JSON.stringify(req.params));
      // call method to service
      let result = await DepartmentService.findDepartmentProjection( {}, req);

      if (!result) {
        return res.status(404).send("Department not found in the database");
      }
      return res.status(200).send(result);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };

  createDepartment = async (req, res, next) => {
    try {
      console.log("Create Department, Data By: " + JSON.stringify(req.body));
      let data = req.body;

      // call method to service
      let resp = await DepartmentService.createDepartment(data, req, res);

      return res.status(200).send(resp);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };

  createAllDepartments = async (req, res, next) => {
    try {
      let data = req.body;

      // call method to service
      let resp = await DepartmentService.createAllDepartments(
        data,
        req,
        res
      );

      return res.status(200).send(resp);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };

  generateCSVHeader = async (req, res, next) => {
    try {
      const autoNumberingData =
        await autoNumberingService.getAutoNumberingByType(
          { type: "DEP" },
          req,
          res
        );
      let CSVHeader = [];
      if (!autoNumberingData?.autoGenerated) {
        CSVHeader.push({ label: "Department_Id", key: "Department_Id" });
      }
      CSVHeader.push(
        { label: "Department_Name", key: "Department_Name" },
        { label: "HOD_Type", key: "HOD_Type" },
        { label: "Employee_Id", key: "Employee_Id" },
        { label: "Job_Id", key: "Job_Id" },
        { label: "Locations", key: "Locations" },
        { label: "As_Of_Date(DD/MM/YYYY)", key: "As_Of_Date" }
      );
      const data = {
        CSVHeader: CSVHeader,
        autoNumberingData: autoNumberingData,
      };
      return res.status(200).send(data);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };
  updateDepartment = async (req, res, next) => {
    try {
      console.log("Update Department, Data By: " + JSON.stringify(req.body));
      let data = req.body;

      // call method to service
      let resp = await DepartmentService.updateDepartment(data, req, res);

      return res.status(200).send(resp);
    } catch (error) {
      console.error(error);
      res.status(400).send(error.message);
    }
  };
}

module.exports = new Department();
